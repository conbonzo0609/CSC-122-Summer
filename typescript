Script started on Thu 09 Jul 2020 03:13:14 PM CDT
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat p[K
a.exe         hide.info     main.cpp      strextra.cpp  suffix.cpp    typescript    
a.out         hide.tbq      names.txt     strextra.h    suffix.h      
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat 
a.exe         hide.info     main.cpp      strextra.cpp  suffix.cpp    typescript    
a.out         hide.tbq      names.txt     strextra.h    suffix.h      
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat hide.info
NAME: Connor Smith
Class: CSC-122-W01
Date: 07/09/2020
Lab: filestrfind
Level: 
Assignment: 1.5
Multiple Attempts: 1.5 
SubString: 1 
All Matches: 0.5 
1st,2nd,3rd: 0.5 
Total: 5 ]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat main.cpp 
#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>
#include <limits> 
#include <vector>
#include "strextra.h"
#include "suffix.h"


using namespace std; 

inline void openMessage(){

    cout << "\tWelcome to the Name Searching Program!!!\n"
         << "\nPlease enter the name of your names file: ";


}

inline void exitMessage(){

    cout << "\nThank you for using the NSP!!\n\nEndeavor to have an amazing day!";


}


int main(){
    bool check,hold;
    char yesno; 
    long x, i; 
    vector <string> names = {};
    vector <long> locations = {};
    string file,namelook;
    fstream myFile; 

    openMessage();

    check = true; 

    cin >> file;

    myFile.open(file,ios::in);

    hold = true;

    while (hold)
    {
   
    

    while(check){
        
        if(myFile.is_open()){
            check = false; 
            cout << "\nFile '" << file << "' opened successfully!";
           string name; 
            while (getline(myFile,name))
            {
                
                 names.push_back(name);
               
            }


            myFile.close();
            break; 



        }
        else {
            cout << "I'm sorry, I could not open  "
                 << "'" << file << "' ."
                 << "Please enter another name:\n";

            cin >> file; 
            myFile.open(file);
            }



           
        
    }


    
    cout << "\n\nWhat name would you like to find in this file?\n"; 
    
    cin.clear();
    cin.ignore(std::numeric_limits<int>::max(),'\n');

    std :: getline(std::cin, namelook);

     x = 0; 
    

    cout << "\n\nWould you like to find a substring of that name if occurs?(Y/N)";

    cin >> yesno;

    if(tolower(yesno) == 'y'){
        
        x = 0; 
        while(x<names.size()){
            std:: size_t found = names[x].find(namelook);

        if (found != std::string::npos) {
            locations.push_back(x);
        }

        x++; 

        }

         i = 0; 

        while(i<locations.size()){

        string index = "\n" + namelook + " is the " + mySuffix(locations[i]) + " sub-name in the file!";

        cout << (locations.size() != 0 ?  index  : "\nError Not found in the file" );
        i++; 

     }


        locations.clear();

        // cout << locations[0] << "\n" << locations[1];



    }else{

        while(x<names.size()){
        if(strcmp_ncase(namelook, names[x]) == 0){
             locations.push_back(x);
            
        }
        x++;
        

  }
        i = 0; 
       
        while(i<locations.size()){
        string index = "\n" + namelook + " is the " + mySuffix(locations[i]) + " name in the file!";

        cout << (locations.size() != 0 ?  index  : "\nError Not found in the file" );
        i++; 
        }

        locations.clear(); // Empty Vector





    }


    

        cout << "\n\nWould you like to make another search?(Y/N)";

        cin >> yesno;

        if(tolower(yesno) == 'y'){
            hold = true; 
        }else{
            hold = false; 
            exitMessage();
        }

    }


    }

]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat strextra.cpp

#include <string>
#include <iostream>

using namespace std; 

int strcmp_ncase(string str1, string str2){


        string:: size_type i = str1.length(); 
        string:: size_type n = str2.length();
	string:: size_type total;

        if(i == n){ 
                for(string:: size_type p = 0; p<i; p++){
                        if(tolower(str1[p]) == tolower(str2[p])){
                                
                        }

                        if(tolower(str1[p]) != tolower(str2[p])){
                                if(int(str1[p]) > int(str2[p])){
                                        return 1;
                                }else{
                                        return -1; 
                                }
                        }
                       

                }

                return 0; 

        }

            return -1;                     


}]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat suffix.cp[Kpp
#include <iostream>
#include <vector>
#include <ctime>
#include <limits>
#include <string>

using namespace std; 

string mySuffix(long suffix){
        suffix++;
        short temp = static_cast<short>(abs(suffix) % 100); 
        short temp2 = static_cast<short>(abs(suffix) % 10);
        string final,final1;
         
        if((temp == 11) || (temp == 12) || (temp == 13)){
                final = to_string(suffix);
                final += "th";
                return final;
        }
         
        switch(temp2){
            case 1: final1 += "st";
                    break; 
            case 2: final1 += "nd";
                    break; 
            case 3: final1 += "rd";
                    break; 
            case 4: final1 += "th";
                    break; 
            case 5: final1 += "th";
                    break; 
            case 6: final1 += "th";
                    break; 
            case 7: final1 += "th";
                    break; 
            case 8: final1 += "th";
                    break; 
            case 9: final1 += "th";
                    break; 
 }

    final1 = to_string(suffix) + final1;

        return final1;



}]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat strextra.h
  
#ifndef strextra_h
#define strextra_h
#include<string>
#include <vector>


int strcmp_ncase(std:: string str1, std :: string str2);


#endif]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat 
a.exe         hide.info     main.cpp      strextra.cpp  suffix.cpp    typescript    
a.out         hide.tbq      names.txt     strextra.h    suffix.h      
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat 
a.exe         hide.info     main.cpp      strextra.cpp  suffix.cpp    typescript    
a.out         hide.tbq      names.txt     strextra.h    suffix.h      
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat suffix.h
#ifndef suffix_h
#define suffix_h 

#include <string>
#include <iostream>

std:: string mySuffix(long suffix);

#endif]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# g++ -std=c++14 main.cpp strextra.cpp suffix.cpp
]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# ./a.out 
	Welcome to the Name Searching Program!!!

Please enter the name of your names file: sms
I'm sorry, I could not open  'sms' .Please enter another name:
names.txt

File 'names.txt' opened successfully!

What name would you like to find in this file?
Th  Connor Smith


Would you like to find a substring of that name if occurs?(Y/N)n

Connor Smith is the 1st name in the file!

Would you like to make another search?(Y/N)y


What name would you like to find in this file?
Thomas Smith


Would you like to find a substring of that name if occurs?(Y/N)n

Thomas Smith is the 2nd name in the file!
Thomas Smith is the 4th name in the file!

Would you like to make another search?(Y/N)y


What name would you like to find in this file?
Oma


Would you like to find a substring of that name if occurs?(Y/N)y

Oma is the 3rd sub-name in the file!

Would you like to make another search?(Y/N)y


What name would you like to find in this file?
Oma Smith


Would you like to find a substring of that name if occurs?(Y/N)y

Oma Smith is the 3rd sub-name in the file!

Would you like to make another search?(Y/N)y


What name would you like to find in this file?
Jerry Smith


Would you like to find a substring of that name if occurs?(Y/N)n


Would you like to make another search?(Y/N)n

Thank you for using the NSP!!

Endeavor to have an amazing day!]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# cat names.txt 
Connor Smith
Thomas Smith
Oma Smith
Thomas Smith]0;root@vultr: ~/CSC-122-Summer/Portfolio2/hideNseakroot@vultr:~/CSC-122-Summer/Portfolio2/hideNseak# exit
exit

Script done on Thu 09 Jul 2020 03:15:15 PM CDT
